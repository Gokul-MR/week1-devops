name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      COVERAGE_SINGLE: 60
      COVERAGE_TOTAL: 60

    steps:
      - name: Check out repo code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"

      - name: Install Dependencies
        run: |
          python -m pip install -r requirements.txt
      - name: Run tests
        run: |
          python -m pip install --upgrade pip
          python -m pytest -v tests --cov . --cov-report xml

      - name: Comment on coverage report
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const fs = require('fs');
            const { parseString } = require('xml2js');
          
            // Read the coverage report file
            const coverageReport = fs.readFileSync('coverage.xml', 'utf8');
          
            // Parse the XML into a JavaScript object
            parseString(coverageReport, (err, result) => {
              if (err) {
                console.error('Error parsing XML:', err);
                return;
              }
            
              // Extract the coverage data from the parsed result
              const coverageData = result.coverage;
            
              // Convert the coverage data to a table format
              const table = [];
              Object.entries(coverageData).forEach(([key, value]) => {
                const row = [key, value];
                table.push(row);
              });
            
              // Format the table as a string
              const tableString = table.map(row => row.join(' | ')).join('\n');
            
              // Create the comment body
              const commentBody = `Coverage Report\n\n${tableString}`;
            
              github.pulls.createReview({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
                body: commentBody,
                event: 'COMMENT'
              });